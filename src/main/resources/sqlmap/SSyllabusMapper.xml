<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hklk.oplatform.dao.inter.SSyllabusMapper">
    <resultMap id="BaseResultMap" type="com.hklk.oplatform.entity.table.SSyllabus">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="sca_id" jdbcType="INTEGER" property="scaId"/>
        <result column="school_id" jdbcType="INTEGER" property="schoolId"/>
        <result column="time_type" jdbcType="INTEGER" property="timeType"/>
        <result column="week_type" jdbcType="INTEGER" property="weekType"/>
        <result column="class_time" property="classTime" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, sca_id, school_id, time_type, week_type,class_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from hklk_school_syllabus
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hklk_school_syllabus
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <delete id="deleteBySchoolId" parameterType="java.lang.Integer">
    delete from hklk_school_syllabus
    where school_id = #{schoolId,jdbcType=INTEGER}
  </delete>

    <insert id="insert" parameterType="com.hklk.oplatform.entity.table.SSyllabus">
    insert into hklk_school_syllabus (id, sca_id, school_id, 
      time_type, week_type,class_time)
    values (#{id,jdbcType=INTEGER}, #{scaId,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, 
      #{timeType,jdbcType=INTEGER}, #{weekType,jdbcType=INTEGER}, #{classTime,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.hklk.oplatform.entity.table.SSyllabus">
        insert into hklk_school_syllabus
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="scaId != null">
                sca_id,
            </if>
            <if test="schoolId != null">
                school_id,
            </if>
            <if test="timeType != null">
                time_type,
            </if>
            <if test="weekType != null">
                week_type,
            </if>
            <if test="classTime != null">
                class_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="scaId != null">
                #{scaId,jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="timeType != null">
                #{timeType,jdbcType=INTEGER},
            </if>
            <if test="weekType != null">
                #{weekType,jdbcType=INTEGER},
            </if>
            <if test="classTime != null">
                #{classTime,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hklk.oplatform.entity.table.SSyllabus">
        update hklk_school_syllabus
        <set>
            <if test="scaId != null">
                sca_id = #{scaId,jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                school_id = #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="timeType != null">
                time_type = #{timeType,jdbcType=INTEGER},
            </if>
            <if test="weekType != null">
                week_type = #{weekType,jdbcType=INTEGER},
            </if>
            <if test="classTime != null">
                class_time = #{classTime,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hklk.oplatform.entity.table.SSyllabus">
    update hklk_school_syllabus
    set sca_id = #{scaId,jdbcType=INTEGER},
      school_id = #{schoolId,jdbcType=INTEGER},
      time_type = #{timeType,jdbcType=INTEGER},
      week_type = #{weekType,jdbcType=INTEGER},
      class_time = #{classTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="queryMapByWeekType" parameterType="map" resultType="map">
        SELECT
        sca.id,
        sca.begin_of_select_time as beginOfSelectTime,
        sca.end_of_select_time as endOfSelectTime,
        sca.curr_start_time as currStartTime,
        sca.teacher_id as teacherId,
        c.grade,
        st.nickname as teacherName,
        sca.max_num as maxNum,
        c.`name` as curriculumName,
        sca.curriculum_id as curriculumId,
        sca.class_place as classPlace,
        ss.class_time as classTime
        FROM
        hklk_school_syllabus ss
        LEFT JOIN hklk_school_curriculum_apply sca ON ss.sca_id = sca.id
        LEFT JOIN hklk_school_teacher st ON sca.teacher_id = st.id
        LEFT JOIN hklk_curriculum c ON sca.curriculum_id = c.id
        where ss.school_id = #{schoolId}
        <if test="weekType != null">
            and ss.week_type = #{weekType}
        </if>
    </select>

    <select id="queryMapByTimeType" parameterType="map" resultType="map">
        SELECT
        sca.id,
        DATE_FORMAT(sca.begin_of_select_time,'%Y-%m-%d') as beginOfSelectTime,
        DATE_FORMAT(sca.end_of_select_time,'%Y-%m-%d') as endOfSelectTime,
        DATE_FORMAT(sca.curr_start_time,'%Y-%m-%d') as currStartTime,
        sca.teacher_id as teacherId,
        c.grade,
        st.t_name as teacherName,
        sca.max_num as maxNum,
        c.`name` as curriculumName,
        sca.curriculum_id as curriculumId,
        sca.class_place as classPlace,
        ss.class_time as classTime,
        ss.week_type as weekType,
        <![CDATA[
        CASE
        WHEN sca.begin_of_select_time > SYSDATE() THEN
        0 /*未开课*/
        WHEN sca.begin_of_select_time< SYSDATE()
        AND SYSDATE()
        < sca.end_of_select_time THEN
        1 /*开始选课*/
        WHEN sca.end_of_select_time< SYSDATE()
        AND SYSDATE()
        < sca.curr_start_time THEN
        2 /*备课中*/
        WHEN SYSDATE() > sca.curr_start_time and SYSDATE()< date_add(
        sca.curr_start_time,
        INTERVAL (
        SELECT
        CEILING(tc.class_hours / count(ts.id)) * 7
        FROM
        hklk_curriculum tc
        LEFT JOIN hklk_school_curriculum_apply tsca ON tc.id = tsca.curriculum_id
        LEFT JOIN hklk_school_syllabus ts ON tsca.id = ts.sca_id
        WHERE
        tsca.id = sca.id
        GROUP BY
        tsca.id
        ) DAY
        ) THEN
        3 /*开始上课*/
        WHEN SYSDATE()> date_add(
        sca.curr_start_time,
        INTERVAL (
        SELECT
        CEILING(tc.class_hours / count(ts.id)) * 7
        FROM
        hklk_curriculum tc
        LEFT JOIN hklk_school_curriculum_apply tsca ON tc.id = tsca.curriculum_id
        LEFT JOIN hklk_school_syllabus ts ON tsca.id = ts.sca_id
        WHERE
        tsca.id = sca.id
        GROUP BY
        tsca.id
        ) DAY
        ) THEN
        4 /*已结束*/
        END AS applyStatus,
        ]]>
        (select count(tss.id) from hklk_school_syllabus tss where tss.school_id=1 and tss.sca_id = sca.id) as weeklyNum
        FROM
        hklk_school_syllabus ss
        LEFT JOIN hklk_school_curriculum_apply sca ON ss.sca_id = sca.id
        LEFT JOIN hklk_school_teacher st ON sca.teacher_id = st.id
        LEFT JOIN hklk_curriculum c ON sca.curriculum_id = c.id
        where ss.school_id = #{schoolId}
        <if test="timeType != null">
            and ss.time_type = #{timeType}
        </if>
        order by week_type
    </select>


    <select id="queryMapByTimeTypeForEnd" parameterType="map" resultType="map">
        SELECT
        sca.id,
        DATE_FORMAT(sca.begin_of_select_time,'%Y-%m-%d') as beginOfSelectTime,
        DATE_FORMAT(sca.end_of_select_time,'%Y-%m-%d') as endOfSelectTime,
        DATE_FORMAT(sca.curr_start_time,'%Y-%m-%d') as currStartTime,
        sca.teacher_id as teacherId,
        c.grade,
        st.t_name as teacherName,
        sca.max_num as maxNum,
        c.`name` as curriculumName,
        sca.curriculum_id as curriculumId,
        sca.class_place as classPlace,
        ss.class_time as classTime,
        ss.week_type as weekType
        FROM
        hklk_school_syllabus_end ss
        LEFT JOIN hklk_school_curriculum_apply sca ON ss.sca_id = sca.id
        LEFT JOIN hklk_school_teacher st ON sca.teacher_id = st.id
        LEFT JOIN hklk_curriculum c ON sca.curriculum_id = c.id
        where ss.school_id = #{schoolId}
        <if test="weekType != null">
            and ss.week_type = #{weekType}
        </if>
    </select>


    <select id="selectMaxTimeType" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT
        IFNULL(max(time_type),0)
        FROM
        hklk_school_syllabus ss
        where ss.school_id = #{schoolId}
    </select>

</mapper>