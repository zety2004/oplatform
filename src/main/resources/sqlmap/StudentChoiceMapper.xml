<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hklk.oplatform.dao.inter.StudentChoiceMapper">
    <resultMap id="BaseResultMap" type="com.hklk.oplatform.entity.table.StudentChoice">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="student_id" property="studentId" jdbcType="INTEGER"/>
        <result column="sca_id" property="scaId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="pay_state" property="payState" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, student_id, sca_id, create_time, pay_state
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from hklk_student_choice_curriculum
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hklk_student_choice_curriculum
    where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insertSelective" parameterType="com.hklk.oplatform.entity.table.StudentChoice">
        insert into hklk_student_choice_curriculum
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="scaId != null">
                sca_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="payState != null">
                pay_state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=INTEGER},
            </if>
            <if test="scaId != null">
                #{scaId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payState != null">
                #{payState,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hklk.oplatform.entity.table.StudentChoice">
        update hklk_student_choice_curriculum
        <set>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=INTEGER},
            </if>
            <if test="scaId != null">
                sca_id = #{scaId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payState != null">
                pay_state = #{payState,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="queryParentApplyForIsApply" resultType="map" parameterType="map">
                SELECT
                    sca_id,pay_state
                FROM
                    hklk_student_choice_curriculum
                WHERE
                    student_id = #{studentId,jdbcType=INTEGER} and sca_id = #{scaId,jdbcType=INTEGER}
    </select>

    <select id="queryParentApplyForVerification" resultType="java.lang.Integer" parameterType="map">
        select max(num) from (SELECT
            count(1) as num,sca.school_id
        FROM
            hklk_school_curriculum_apply sca
        RIGHT JOIN hklk_school_syllabus ss ON sca.id = ss.sca_id
        WHERE
            sca.school_id = #{schoolId,jdbcType=INTEGER}
        AND sca_id IN (
            SELECT
                 #{scaId,jdbcType=INTEGER}
            UNION
                SELECT
                    sca_id
                FROM
                    hklk_student_choice_curriculum
                WHERE
                    student_id = #{studentId,jdbcType=INTEGER}
        )
        GROUP BY ss.week_type) t GROUP BY t.school_id
    </select>

    <select id="queryMyCurriculumVerification" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        (
        SELECT
        sca.id,
        sca.curriculum_id,
        sca.teacher_id,
        sca.applyStatus
        FROM
        (
        SELECT
        hsca.id,
        hsca.curriculum_id,
        hsca.teacher_id,
        hsca.status as applyStatus
        FROM
        hklk_student_choice_curriculum scc
        LEFT JOIN hklk_school_curriculum_apply hsca ON scc.sca_id = hsca.id
        WHERE
        scc.student_id = #{studentId,jdbcType=INTEGER}
        <if test="payState != null">
            and scc.pay_state = #{payState,jdbcType=INTEGER}
        </if>

        GROUP BY
        hsca.id
        ) sca
        LEFT JOIN hklk_curriculum c ON sca.curriculum_id = c.id
        LEFT JOIN hklk_school_teacher st ON st.id = sca.teacher_id
        LEFT JOIN hklk_consumables cs ON sca.curriculum_id = cs.curriculum_id
        GROUP BY
        sca.id
        ) tmp
        LEFT JOIN hklk_school_syllabus h ON tmp.id = h.sca_id
        WHERE
        1 = 1
        <if test="weekType != null">
            and h.week_type = #{weekType,jdbcType=INTEGER}
        </if>
        <choose>
            <when test="state == 1">
                and tmp.applyStatus = 4
            </when>
            <otherwise>
                and tmp.applyStatus != 4
            </otherwise>
        </choose>
    </select>


    <select id="queryMyCurriculum" resultType="map" parameterType="map">
        SELECT
        tmp.*, group_concat(
        CASE
        WHEN h.week_type = 1 THEN
        '周一'
        WHEN h.week_type = 2 THEN
        '周二'
        WHEN h.week_type = 3 THEN
        '周三'
        WHEN h.week_type = 4 THEN
        '周四'
        WHEN h.week_type = 5 THEN
        '周五'
        END
        ) classTime,
        week_type weekType
        FROM
        (
        SELECT
        sca.id,
        c.`name` AS curriculumName,
        sca.applicable_grade AS grade,
        sca.curriculum_id AS curriculumId,
        st.nickname AS teacherName,
        sca.curr_start_time AS currStartTime,
        sca.max_num maxNum,
        sca.class_place classPlace,
        c.class_hours classHours,
        sca.studentNum,
        (
        SELECT
        GROUP_CONCAT(d. NAME)
        FROM
        hklk_dic d
        WHERE
        FIND_IN_SET(d.id, c.learning_style) > 0
        GROUP BY
        d.typecode
        ) AS learningStyle,
        c.cover,
        IFNULL(
        SUM(cs.num * cs.unit_price),
        0
        ) AS totalPrice,
        <![CDATA[
        CASE
        WHEN sca.begin_of_select_time > SYSDATE() THEN
        0 /*未开课*/
        WHEN sca.begin_of_select_time < SYSDATE()
        AND SYSDATE() < sca.end_of_select_time THEN
        1 /*开始选课*/
        WHEN sca.end_of_select_time < SYSDATE()
        AND SYSDATE() < sca.curr_start_time THEN
        2 /*备课中*/
        WHEN SYSDATE() > sca.curr_start_time
        AND SYSDATE() < date_add(
        sca.curr_start_time,
        INTERVAL (
        SELECT
        CEILING(
        tc.class_hours / count(ts.id)
        ) * 7
        FROM
        hklk_curriculum tc
        LEFT JOIN hklk_school_curriculum_apply tsca ON tc.id = tsca.curriculum_id
        LEFT JOIN hklk_school_syllabus ts ON tsca.id = ts.sca_id
        WHERE
        tsca.id = sca.id
        GROUP BY
        tsca.id
        ) DAY
        ) THEN
        3 /*开始上课*/
        WHEN SYSDATE() > date_add(
        sca.curr_start_time,
        INTERVAL (
        SELECT
        CEILING(
        tc.class_hours / count(ts.id)
        ) * 7
        FROM
        hklk_curriculum tc
        LEFT JOIN hklk_school_curriculum_apply tsca ON tc.id = tsca.curriculum_id
        LEFT JOIN hklk_school_syllabus ts ON tsca.id = ts.sca_id
        WHERE
        tsca.id = sca.id
        GROUP BY
        tsca.id
        ) DAY
        ) THEN
        4 /*已结束*/
        END AS applyStatus
        ]]>
        FROM
        (
        SELECT
        hsca.id,
        COUNT(scc.id) AS studentNum,
        hsca.curriculum_id,
        hsca.teacher_id,
        hsca.applicable_grade,
        hsca.curr_start_time,
        hsca.max_num,
        hsca.class_place,
        hsca.begin_of_select_time,
        hsca.end_of_select_time
        FROM
        hklk_student_choice_curriculum scc
        LEFT JOIN hklk_school_curriculum_apply hsca ON scc.sca_id = hsca.id
        WHERE
        scc.student_id = #{studentId,jdbcType=INTEGER}
        and scc.pay_state = #{payState,jdbcType=INTEGER}
        GROUP BY
        hsca.id
        ) sca
        LEFT JOIN hklk_curriculum c ON sca.curriculum_id = c.id
        LEFT JOIN hklk_school_teacher st ON st.id = sca.teacher_id
        LEFT JOIN hklk_consumables cs ON sca.curriculum_id = cs.curriculum_id
        GROUP BY
        sca.id
        ) tmp
        LEFT JOIN hklk_school_syllabus h ON tmp.id = h.sca_id
        WHERE
        1 = 1
        <if test="weekType != null">
            and h.week_type = #{weekType,jdbcType=INTEGER}
        </if>
        <choose>
            <when test="state == 1">
                and tmp.applyStatus = 4
            </when>
            <otherwise>
                and tmp.applyStatus != 4
            </otherwise>
        </choose>
    </select>

</mapper>