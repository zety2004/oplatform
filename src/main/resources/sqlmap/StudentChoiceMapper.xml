<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hklk.oplatform.dao.inter.StudentChoiceMapper">
    <resultMap id="BaseResultMap" type="com.hklk.oplatform.entity.table.StudentChoice">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="student_id" property="studentId" jdbcType="INTEGER"/>
        <result column="sca_id" property="scaId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="pay_state" property="payState" jdbcType="INTEGER"/>
        <result column="order_id" property="orderId" jdbcType="VARCHAR"/>
        <result column="pay_money" property="payMoney" jdbcType="DOUBLE"/>
        <result column="pay_hc_money" property="payHcMoney" jdbcType="DOUBLE"/>
        <result column="commodity_name" property="commodityName" jdbcType="VARCHAR"/>
        <result column="transaction_id" property="transactionId" jdbcType="VARCHAR"/>
        <result column="is_hc" property="isHc" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, student_id, sca_id, create_time, pay_state
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from hklk_student_choice_curriculum
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByOrderId" resultType="map" parameterType="java.lang.String">
            SELECT
                scc.id,
                sca.id as scaId,
                scc.student_id AS studentId,
                hc.name as curriculumNum,
                scc.sca_id scaId,
                pay_state payState,
                scc.pay_money payMoney,
                scc.pay_hc_money payHcMoney,
                scc.commodity_name commodityName,
                scc.order_id as orderId
            FROM
                hklk_student_choice_curriculum scc
            LEFT JOIN hklk_school_curriculum_apply sca ON scc.sca_id = sca.id
            LEFT JOIN hklk_curriculum hc ON sca.curriculum_id = hc.id
            where scc.order_id =  #{orderId,jdbcType=VARCHAR}
            GROUP BY scc.id
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hklk_student_choice_curriculum
    where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insertSelective" parameterType="com.hklk.oplatform.entity.table.StudentChoice">
        insert into hklk_student_choice_curriculum
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="scaId != null">
                sca_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="payState != null">
                pay_state,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="payMoney != null">
                pay_money,
            </if>
            <if test="payHcMoney != null">
                pay_hc_money,
            </if>
            <if test="commodityName != null">
                commodity_name,
            </if>
            <if test="transactionId != null">
                transaction_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=INTEGER},
            </if>
            <if test="scaId != null">
                #{scaId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payState != null">
                #{payState,jdbcType=INTEGER},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="payMoney != null">
                #{payMoney,jdbcType=VARCHAR},
            </if>
            <if test="payHcMoney != null">
                #{payHcMoney,jdbcType=VARCHAR},
            </if>
            <if test="commodityName != null">
                #{commodityName,jdbcType=VARCHAR},
            </if>
            <if test="transactionId != null">
                #{transactionId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hklk.oplatform.entity.table.StudentChoice">
        update hklk_student_choice_curriculum
        <set>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=INTEGER},
            </if>
            <if test="scaId != null">
                sca_id = #{scaId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payState != null">
                pay_state = #{payState,jdbcType=INTEGER},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="payMoney != null">
                pay_money = #{payMoney,jdbcType=VARCHAR},
            </if>
            <if test="payHcMoney != null">
                pay_hc_money = #{payHcMoney,jdbcType=VARCHAR},
            </if>
            <if test="isHc != null">
                is_hc = #{isHc,jdbcType=INTEGER},
            </if>
            <if test="commodityName != null">
                commodity_name = #{commodityName,jdbcType=VARCHAR},
            </if>
            <if test="transactionId != null">
                transaction_id = #{transactionId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="queryParentApplyForIsApply" resultType="java.lang.Integer" parameterType="map">
                SELECT
                    count(1)
                FROM
                    hklk_student_choice_curriculum scc
                LEFT JOIN hklk_school_syllabus ss ON ss.sca_id = scc.sca_id
                WHERE
                    ss.id IS NOT NULL and scc.pay_state not in (-1,2)
                AND scc.student_id = #{studentId,jdbcType=INTEGER}
                AND ss.week_type IN (
                    SELECT
                        ss.week_type
                    FROM
                        hklk_school_curriculum_apply sca
                    LEFT JOIN hklk_school_syllabus ss ON sca.id = ss.sca_id
                    WHERE
                        ss.id IS NOT NULL
                    AND sca.id = #{scaId,jdbcType=INTEGER}
                )
    </select>

    <select id="queryParentApplyForIsQualified" resultType="java.lang.Integer" parameterType="map">
                select count(1) from hklk_school_curriculum_apply sca
                where sca.applicable_grade like CONCAT('%', #{grade}, '%')
                and sca.school_id = #{schoolId,jdbcType=INTEGER}
                and sca.id = #{scaId,jdbcType=INTEGER}
    </select>

    <select id="queryParentApplyForVerificationTime" resultType="java.lang.Integer" parameterType="map">
        select count(1) from
        hklk_school_curriculum_apply sca
        where sca.id = #{scaId,jdbcType=INTEGER}
        <![CDATA[
        and sca.max_num > (select count(id) from hklk_student_choice_curriculum scc where scc.sca_id = #{scaId,jdbcType=INTEGER})
        and sca.begin_of_select_time<= SYSDATE() and sca.end_of_select_time >= SYSDATE()






        ]]>
    </select>

    <select id="queryCurriculumForParentApply" resultType="map" parameterType="map">
        SELECT
            sca.id,
            hc.`name`,
            IFNULL(hc.price,0) kcPrice,
            IFNULL(sum(h2.unit_price * h2.num),0) hcPrice
        FROM
            hklk_school_curriculum_apply sca
        LEFT JOIN hklk_curriculum hc ON sca.curriculum_id = hc.id
        LEFT JOIN hklk_consumables h2 ON hc.id = h2.curriculum_id
        where sca.id = #{scaId,jdbcType=INTEGER}
        GROUP BY
            sca.id
    </select>

    <select id="queryIsCanRefund" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select count(1) from hklk_school_curriculum_apply sca
        <![CDATA[
        where
        sca.id = #{scaId,jdbcType=INTEGER} and (sca.is_open_class is NULL or sca.is_open_class !=1) and
        (
        sca.begin_of_select_time <= SYSDATE()
        and SYSDATE()<= sca.end_of_select_time
        ) or sca.is_open_class =0














        ]]>
    </select>

    <select id="queryMyCurriculumVerification" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        (
        SELECT
        sca.id,
        sca.curriculum_id,
        sca.teacher_id,
        sca.applyStatus
        FROM
        (
        SELECT
        hsca.id,
        hsca.curriculum_id,
        hsca.teacher_id,
        hsca.status as applyStatus
        FROM
        hklk_student_choice_curriculum scc
        LEFT JOIN hklk_school_curriculum_apply hsca ON scc.sca_id = hsca.id
        WHERE
        scc.student_id = #{studentId,jdbcType=INTEGER}
        and scc.pay_state = 1
        GROUP BY
        hsca.id
        ) sca
        LEFT JOIN hklk_curriculum c ON sca.curriculum_id = c.id
        LEFT JOIN hklk_school_teacher st ON st.id = sca.teacher_id
        LEFT JOIN hklk_consumables cs ON sca.curriculum_id = cs.curriculum_id
        GROUP BY
        sca.id
        ) tmp
        LEFT JOIN hklk_school_syllabus h ON tmp.id = h.sca_id
        WHERE
        1 = 1
        <if test="weekType != null">
            and h.week_type = #{weekType,jdbcType=INTEGER}
        </if>
        <choose>
            <when test="state == 1">
                and tmp.applyStatus = 4
            </when>
            <otherwise>
                and tmp.applyStatus != 4
            </otherwise>
        </choose>
    </select>


    <select id="queryMyCurriculum" resultType="map" parameterType="map">
        SELECT
        tmp.*, group_concat(
        CASE
        WHEN h.week_type = 1 THEN
        '周一'
        WHEN h.week_type = 2 THEN
        '周二'
        WHEN h.week_type = 3 THEN
        '周三'
        WHEN h.week_type = 4 THEN
        '周四'
        WHEN h.week_type = 5 THEN
        '周五'
        END
        SEPARATOR '、') classTime,
        week_type weekType
        FROM
        (
        SELECT
        sca.id,
        c.`name` AS curriculumName,
        sca.applicable_grade AS grade,
        sca.curriculum_id AS curriculumId,
        st.nickname AS teacherName,
        sca.curr_start_time AS currStartTime,
        sca.max_num maxNum,
        sca.class_place classPlace,
        c.class_hours classHours,
        sca.orderId,
        sca.studentNum,
        (
        SELECT
        GROUP_CONCAT(d. NAME)
        FROM
        hklk_dic d
        WHERE
        FIND_IN_SET(d.id, c.learning_style) > 0
        GROUP BY
        d.typecode
        ) AS learningStyle,
        c.cover,
        IFNULL(
        SUM(cs.num * cs.unit_price),
        0
        ) AS totalPrice,
        <![CDATA[
        CASE
        WHEN sca.begin_of_select_time > SYSDATE() THEN
        0 /*未开课*/
        WHEN sca.begin_of_select_time < SYSDATE()
        AND SYSDATE() < sca.end_of_select_time THEN
        1 /*开始选课*/
        WHEN sca.end_of_select_time < SYSDATE()
        AND SYSDATE() < sca.curr_start_time THEN
        2 /*备课中*/
        WHEN SYSDATE() > sca.curr_start_time
        AND SYSDATE() < date_add(
        sca.curr_start_time,
        INTERVAL (
        SELECT
        CEILING(
        tc.class_hours / count(ts.id)
        ) * 7
        FROM
        hklk_curriculum tc
        LEFT JOIN hklk_school_curriculum_apply tsca ON tc.id = tsca.curriculum_id
        LEFT JOIN hklk_school_syllabus ts ON tsca.id = ts.sca_id
        WHERE
        tsca.id = sca.id
        GROUP BY
        tsca.id
        ) DAY
        ) THEN
        3 /*开始上课*/
        WHEN SYSDATE() > date_add(
        sca.curr_start_time,
        INTERVAL (
        SELECT
        CEILING(
        tc.class_hours / count(ts.id)
        ) * 7
        FROM
        hklk_curriculum tc
        LEFT JOIN hklk_school_curriculum_apply tsca ON tc.id = tsca.curriculum_id
        LEFT JOIN hklk_school_syllabus ts ON tsca.id = ts.sca_id
        WHERE
        tsca.id = sca.id
        GROUP BY
        tsca.id
        ) DAY
        ) THEN
        4 /*已结束*/
        END AS applyStatus
        ]]>
        FROM
        (
        SELECT
        hsca.id,
        COUNT(scc.id) AS studentNum,
        hsca.curriculum_id,
        hsca.teacher_id,
        hsca.applicable_grade,
        hsca.curr_start_time,
        hsca.max_num,
        hsca.class_place,
        hsca.begin_of_select_time,
        hsca.end_of_select_time,
        scc.order_id orderId,
        scc.create_time,
        scc.id sccId
        FROM
        hklk_student_choice_curriculum scc
        LEFT JOIN hklk_school_curriculum_apply hsca ON scc.sca_id = hsca.id
        WHERE
        scc.student_id = #{studentId,jdbcType=INTEGER}
        and scc.pay_state = 1
        GROUP BY
        hsca.id
        ) sca
        LEFT JOIN hklk_curriculum c ON sca.curriculum_id = c.id
        LEFT JOIN hklk_school_teacher st ON st.id = sca.teacher_id
        LEFT JOIN hklk_consumables cs ON sca.curriculum_id = cs.curriculum_id
        GROUP BY
        sca.id
        ) tmp
        LEFT JOIN hklk_school_syllabus h ON tmp.id = h.sca_id
        WHERE
        tmp.applyStatus != 4
        <if test="weekType != null">
            and h.week_type = #{weekType,jdbcType=INTEGER}
        </if>
    </select>

    <select id="queryMyCurriculumList" resultType="map" parameterType="map">

        SELECT
        sca.id,
        c.`name` AS curriculumName,
        st.nickname AS teacherName,
        sca.class_place classPlace,
        c.class_hours classHours,
        sca.orderId,
        (SYSDATE()-sca.create_time) as second,
        sca.create_time,
        sca.sccId,
        sca.max_num as maxNum,
        sca.isCanSelect,
        sca.isOpenClass,
        c.cover,
        sca.pay_money AS totalPrice,
        sca.pay_hc_money as hcPrice,
        sca.pay_state payState
        FROM
        (
        SELECT
        hsca.id,
        hsca.curriculum_id,
        hsca.teacher_id,
        hsca.class_place,
        hsca.status,
        hsca.max_num,
        scc.order_id orderId,
        scc.create_time,
        scc.id sccId,
        scc.pay_money,
        scc.pay_hc_money,
        <![CDATA[
        (hsca.begin_of_select_time < SYSDATE() and SYSDATE() < hsca.end_of_select_time) as isCanSelect,
        ]]>
        hsca.is_open_class as isOpenClass,
        scc.pay_state
        FROM
        hklk_student_choice_curriculum scc
        LEFT JOIN hklk_school_curriculum_apply hsca ON scc.sca_id = hsca.id
        WHERE
        scc.student_id = #{studentId,jdbcType=INTEGER}
        <if test="state != 1">
            and scc.pay_state not in (-1,2)
        </if>
        ) sca
        LEFT JOIN hklk_curriculum c ON sca.curriculum_id = c.id
        LEFT JOIN hklk_school_teacher st ON st.id = sca.teacher_id
        LEFT JOIN hklk_consumables cs ON sca.curriculum_id = cs.curriculum_id
        WHERE
        1 = 1
        <choose>
            <when test="state == 1">
                AND (sca.status in (-1,4) or sca.pay_state in (-1,2))
                GROUP BY sca.orderId
                order by sca.create_time desc
            </when>
            <otherwise>
                AND sca.status != 4 and sca.pay_state not in (-1,2)
                GROUP BY sca.id
                order by sca.create_time desc
            </otherwise>
        </choose>
    </select>

</mapper>